name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-backend:
    name: Build Backend (.NET)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./WeatherDashboardAPI
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
      working-directory: ./WeatherDashboardAPI
    
    - name: Publish
      run: dotnet publish --no-build --configuration Release --output ./publish
      working-directory: ./WeatherDashboardAPI
    
    - name: Upload backend artifact
      uses: actions/upload-artifact@v3
      with:
        name: backend
        path: WeatherDashboardAPI/publish/

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install --production || echo "No production dependencies"
      working-directory: ./weather-dashboard-frontend
    
    - name: Upload frontend artifact
      uses: actions/upload-artifact@v3
      with:
        name: frontend
        path: weather-dashboard-frontend/

  docker-build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build backend Docker image
      run: |
        docker build -t weather-api:latest ./WeatherDashboardAPI
    
    - name: Build frontend Docker image
      run: |
        docker build -t weather-frontend:latest ./weather-dashboard-frontend
    
    - name: Test Docker Compose
      run: |
        docker-compose config

  # Deployment job (commented out - customize for your deployment target)
  # deploy:
  #   name: Deploy to Production
  #   runs-on: ubuntu-latest
  #   needs: [docker-build]
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3
  #   
  #   # Add your deployment steps here
  #   # Examples:
  #   # - Deploy to Azure App Service
  #   # - Deploy to AWS
  #   # - Deploy to DigitalOcean
  #   # - Push Docker images to registry
